(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{529:function(t,e,a){"use strict";a.r(e);var r=a(3),i=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("解决思路：对于每一个版本都删除，然后上传版本覆盖远程仓库的版本")])]),a("h2",{attrs:{id:"本地删除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地删除"}},[t._v("#")]),t._v(" 本地删除")]),t._v(" "),a("p",[a("code",[t._v("git filter-branch --force --index-filter 'git rm --cached --ignore-unmatch src/main/resources/application.yaml' --prune-empty --tag-name-filter cat -- --all")])]),t._v(" "),a("p",[t._v("可能遇到")]),t._v(" "),a("p",[a("code",[t._v("Cannot rewrite branches: You have unstaged changes")])]),t._v(" "),a("p",[t._v("解决：执行"),a("code",[t._v("git stash")])]),t._v(" "),a("h2",{attrs:{id:"覆盖远程仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#覆盖远程仓库"}},[t._v("#")]),t._v(" 覆盖远程仓库")]),t._v(" "),a("p",[t._v("覆盖所有的branch和tags")]),t._v(" "),a("p",[a("code",[t._v("git push origin --force --all")])]),t._v(" "),a("p",[a("code",[t._v("git push origin --force --tags")])]),t._v(" "),a("h2",{attrs:{id:"强制解除对本地存储库中的所有对象的引用和垃圾收集"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强制解除对本地存储库中的所有对象的引用和垃圾收集"}},[t._v("#")]),t._v(" 强制解除对本地存储库中的所有对象的引用和垃圾收集")]),t._v(" "),a("ul",[a("li",[t._v("git for-each-ref --format='delete %(refname)' refs/original | git update-ref --stdin")]),t._v(" "),a("li",[t._v("git reflog expire --expire=now --all")]),t._v(" "),a("li",[t._v("git gc --prune=now")])])])}),[],!1,null,null,null);e.default=i.exports}}]);