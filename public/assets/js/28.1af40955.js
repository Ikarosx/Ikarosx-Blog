(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{544:function(t,s,a){"use strict";a.r(s);var n=a(3),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"起因"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#起因"}},[t._v("#")]),t._v(" 起因")]),t._v(" "),a("p",[t._v("舍友不知道哪里看到了WebRTC这个东西"),a("br"),t._v("\n然后就怂恿我去学这个")]),t._v(" "),a("p",[t._v("结果来说截止2020年2020年10月25日01:36:37实现了"),a("br"),t._v("\n①一对一\n②[一对多]直播间(https://parva.cool/zbj/) 虾哥友情赞助 2020年10月25日00:10:36更新\n③多对多")]),t._v(" "),a("p",[t._v("demo以及源代码地址https://stun.ikarosx.cn/wx/20201023WebRTC%E5%AE%9E%E8%B7%B5")]),t._v(" "),a("p",[t._v("实现基于P2P"),a("br"),t._v("\n也就是流量不经过服务器"),a("br"),t._v("\n而是客户端之间直接通信")]),t._v(" "),a("h2",{attrs:{id:"webrtc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webrtc"}},[t._v("#")]),t._v(" WebRTC")]),t._v(" "),a("p",[t._v("WebRTC是指网络实时通信"),a("strong",[t._v("Web Real Time Communication")]),a("br"),t._v("\nGoogle是WebRTC的主要支持者和开发者")]),t._v(" "),a("ul",[a("li",[t._v("Web Real-Time Communications (WEBRTC) W3C Working Group是负责定义浏览器接口部分标准的组织"),a("a",{attrs:{href:"https://www.w3.org/TR/webrtc/",target:"_blank",rel:"noopener noreferrer"}},[t._v("w3cWebRTC文档"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("Real-Time Communication in Web-browsers (RTCWEB) 是 IETF 工作组，负责定义协议，数据格式，安全，以及一切技术底层，"),a("a",{attrs:{href:"https://datatracker.ietf.org/doc/search?name=rtc&sort=&rfcs=on&activedrafts=on&by=group&group=",target:"_blank",rel:"noopener noreferrer"}},[t._v("draft以及rfc地址"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("通过浏览器音视频实时通信底层需要处理很多问题"),a("br"),t._v("\n比如不断波动的带宽和延迟，音视频编码解码"),a("br"),t._v("\nW3C规范定义了一组跟媒体捕获与流相关的"),a("strong",[t._v("JavaScript API")]),a("br"),t._v("\n方便开发者使用")]),t._v(" "),a("h2",{attrs:{id:"js相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js相关"}},[t._v("#")]),t._v(" JS相关")]),t._v(" "),a("h3",{attrs:{id:"主要对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主要对象"}},[t._v("#")]),t._v(" 主要对象")]),t._v(" "),a("ul",[a("li",[t._v("RTCPeerConnection，表示本地计算机和远程计算机之间的WebRTC连接")]),t._v(" "),a("li",[t._v("navigator.mediaDevices，navigator对象包含有关浏览器的信息，所有浏览器都包含这个对象，mediaDevices则是提供了与媒体设备交互的能力，比如摄像头、麦克风以及屏幕分享等")])]),t._v(" "),a("h3",{attrs:{id:"获取摄像头demo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取摄像头demo"}},[t._v("#")]),t._v(" 获取摄像头demo")]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 展示窗口标签 --\x3e")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("video")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("localVideo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("autoplay")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("video")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLocalCamera")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 配置参数，是否获取音频和视频，更多配置请看")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" constraints "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                video"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                audio"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过navigator.mediaDevices.getUserMedia获取摄像头和麦克风")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里要注意，有两种写法")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一种是navigator.getUserMedia(constraints, successCallBack, failureCallBack)")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第二种是navigator.mediaDevices.getUserMedia(constraints).thenc写法")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 现在是推荐第二种，第一种已经deprecated过期了")]),t._v("\n            navigator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mediaDevices\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getUserMedia")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("constraints"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("stream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 成功回调")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将获取到的流设置到我们的标签上")]),t._v("\n                    document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#localVideo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("srcObject "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" stream"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("catch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 异常打印信息")]),t._v("\n                    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"获取摄像头失败:"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用一下函数")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLocalCamera")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("       \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br")])]),a("p",[t._v("将上面代码复制成一个html文件即可访问本机")]),t._v(" "),a("img",{attrs:{src:"https://ikaros-picture.oss-cn-shenzhen.aliyuncs.com/typora/Ikaros/20201024001238.png"}}),t._v(" "),a("h3",{attrs:{id:"本地测试一对一"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地测试一对一"}},[t._v("#")]),t._v(" 本地测试一对一")]),t._v(" "),a("p",[t._v("相关知识")]),t._v(" "),a("ul",[a("li",[t._v("STUN/TURN服务器")]),t._v(" "),a("li",[t._v("NAT")]),t._v(" "),a("li",[t._v("SDP")]),t._v(" "),a("li",[t._v("P2P")]),t._v(" "),a("li",[t._v("WebSocket")])]),t._v(" "),a("h4",{attrs:{id:"nat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nat"}},[t._v("#")]),t._v(" NAT")]),t._v(" "),a("p",[t._v("WebRTC需要实现音视频"),a("strong",[t._v("P2P")]),t._v("点对点"),a("br"),t._v("\n点对点指的是我们传输的时候直接连接到对方的IP:port"),a("br"),t._v("\n而不需要经过服务器"),a("br"),t._v("\n但由于IPV4地址不够"),a("br"),t._v("\n所以我们现在很多主机IP都是10.0.x.x/192.168.x.x"),a("br"),t._v("\n这些都是通过"),a("strong",[t._v("NAT")]),t._v("转换而来的"),a("br"),t._v("\n比如网络出口IP为1.2.3.4"),a("br"),t._v("\n那么"),a("br"),t._v("\n内网IP为192.168.1.3对应的外网IP可能是1.2.3.4:222"),a("br"),t._v("\n内网IP为192.168.1.4对应的外网IP可能是1.2.3.4:223"),a("br"),t._v("\n实际上的NAT转换还分"),a("strong",[t._v("锥型")]),t._v("NAT和"),a("strong",[t._v("对称型")]),t._v("NAT")]),t._v(" "),a("ul",[a("li",[t._v("完全锥型NAT，Full Cone NAT")]),t._v(" "),a("li",[t._v("受限锥型NAT，Restricted Cone NAT")]),t._v(" "),a("li",[t._v("端口受限型NAT，Port Restricted Cone NAT")]),t._v(" "),a("li",[t._v("对称型NAT，Symmetric NAT")])]),t._v(" "),a("h4",{attrs:{id:"stun-turn"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stun-turn"}},[t._v("#")]),t._v(" STUN/TURN")]),t._v(" "),a("p",[t._v("我们的STUN/TURN服务器就是为了解决NAT问题"),a("br"),t._v(" "),a("strong",[t._v("STUN")]),t._v("可以解决"),a("strong",[t._v("Full Cone NAT")]),t._v("型的NAT"),a("br"),t._v("\ngoogle提供了"),a("strong",[t._v("免费")]),t._v("的STUN服务器"),a("code",[t._v("stun:stun.l.google.com:19302")]),a("br"),t._v("\n当STUN无法解决时则需要TURN服务器"),a("br"),t._v("\nTURN服务器充当了一个"),a("strong",[t._v("中转")]),t._v("的角色"),a("br"),t._v("\n即A与B通信，实际是A发往TURN，TURN发往B这样子"),a("br"),t._v("\n从这层意义上来说不能算完全的P2P")]),t._v(" "),a("h4",{attrs:{id:"交互流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#交互流程"}},[t._v("#")]),t._v(" 交互流程")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.twilio.com/docs/stun-turn/faq#faq-how-does-nat-work",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考该篇文章"),a("OutboundLink")],1),t._v("制作出来的交互图")]),t._v(" "),a("img",{attrs:{src:"https://ikaros-picture.oss-cn-shenzhen.aliyuncs.com/typora/Ikaros/WebRTC.png"}}),t._v(" "),a("p",[t._v("这里我们需要一个信令服务器"),a("br"),t._v("\n虽然是P2P，但只是传输数据的时候不通过我们的服务器"),a("br"),t._v("\n但把客户端联系起来还是需要到信令服务器的"),a("br"),t._v("\n本篇文章采用WebSocket")]),t._v(" "),a("p",[t._v("所以实现部分除了页面代码"),a("br"),t._v("\n还需要搭建一个"),a("strong",[t._v("WebSocket")]),t._v("服务器")]),t._v(" "),a("p",[t._v("WebSocket服务器主要负责存储用户连接"),a("br"),t._v("\n以及转发各种事件"),a("br"),t._v("\n比如offer/answer/candidate等"),a("br"),t._v("\n采用nodejs实现")]),t._v(" "),a("p",[t._v("这里由于代码过多"),a("br"),t._v("\n已经放在了开头\n代码里都有注释")]),t._v(" "),a("h3",{attrs:{id:"一对多"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一对多"}},[t._v("#")]),t._v(" 一对多")]),t._v(" "),a("p",[t._v("思路其实和一对一 一样"),a("br"),t._v("\n问题在于一的一方需要维护多个RTCPeerConnection"),a("br"),t._v("\n以及WebSocket需要处理转发给多个webSocket对象")]),t._v(" "),a("p",[t._v("类似实现就是"),a("strong",[t._v("直播间")]),a("br"),t._v("\n贴上舍友写的demo\nhttps://parva.cool/zbj/")]),t._v(" "),a("h3",{attrs:{id:"多对多"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多对多"}},[t._v("#")]),t._v(" 多对多")]),t._v(" "),a("p",[t._v("同上，每一个用户都维护多个RTCPeerConnection")]),t._v(" "),a("h3",{attrs:{id:"屏幕分享"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#屏幕分享"}},[t._v("#")]),t._v(" 屏幕分享")]),t._v(" "),a("p",[t._v("我们除了可以获取摄像头"),a("br"),t._v("\n也可以获取屏幕分享"),a("br"),t._v("\n很多人在线上笔试的时候也许有发现一个屏幕分享的功能"),a("br"),t._v("\n那个就是用\n"),a("code",[t._v("navigator.mediaDevices.getDisplayMedia")]),t._v("实现的"),a("br"),t._v("\n其他部分没什么区别"),a("br"),t._v("\n会了摄像头很简单就能切换到屏幕分享"),a("br"),t._v("\n但仅限chrome"),a("br"),t._v("\n这也是为什么很多笔试面试都要求使用chrome的特定版本以上")]),t._v(" "),a("h3",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("通过这几天对于WebRTC的学习"),a("br"),t._v("\n明白了会使用是不够的"),a("br"),t._v("\n真的要会懂原理"),a("br"),t._v("\n而最好的方法就是看协议"),a("br"),t._v("\nrfc"),a("br"),t._v("\n比如期间使用TURN服务器遇到的问题"),a("br"),t._v("\n不明白运作原理根本无从下手")])])}),[],!1,null,null,null);s.default=r.exports}}]);